diff --git a/api/resources.js b/api/resources.js
index eda0aa217..0b8287498 100644
--- a/api/resources.js
+++ b/api/resources.js
@@ -1,3 +1,5 @@
+const { getLayerArn } = require("@webiny/aws-layers");
+
 const apolloServiceEnv = {
     COGNITO_REGION: process.env.AWS_REGION,
     COGNITO_USER_POOL_ID: "${cognito.userPool.Id}",
@@ -21,6 +23,18 @@ const apolloGatewayServices = {

 module.exports = () => ({
     resources: {
+        lambdaRole: {
+            deploy: {
+                component: "@webiny/serverless-aws-iam-role",
+                inputs: {
+                    region: process.env.AWS_REGION,
+                    service: "lambda.amazonaws.com",
+                    policy: {
+                        arn: "arn:aws:iam::aws:policy/AdministratorAccess"
+                    }
+                }
+            }
+        },
         apolloGateway: {
             watch: ["./apolloGateway/build"],
             build: {
@@ -30,6 +44,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     description: "Apollo Gateway",
                     code: "./apolloGateway/build",
@@ -48,6 +63,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     description: "Handles interaction with MongoDB",
                     code: "./databaseProxy/build",
@@ -84,6 +100,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     description: "Settings Manager",
                     region: process.env.AWS_REGION,
                     code: "./settingsManager/build",
@@ -106,6 +123,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     description: "Security GraphQL API",
                     region: process.env.AWS_REGION,
                     code: "./security/graphql/build",
@@ -125,6 +143,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     code: "./security/validateAccessToken/build",
                     handler: "handler.handler",
@@ -146,6 +165,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     description: "Serves previously uploaded files.",
                     region: process.env.AWS_REGION,
                     code: "./files/download/build",
@@ -168,12 +188,14 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     description: "Performs image optimization, resizing, etc.",
                     region: process.env.AWS_REGION,
                     code: "./files/transform/build",
                     handler: "handler.handler",
                     memory: 1600,
                     timeout: 30,
+                    layers: [getLayerArn("webiny-v4-sharp", process.env.AWS_REGION)],
                     env: {
                         S3_BUCKET: process.env.S3_BUCKET
                     }
@@ -189,6 +211,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     description: "Triggered when a file is deleted.",
                     region: process.env.AWS_REGION,
                     code: "./files/manage/build",
@@ -216,9 +239,7 @@ module.exports = () => ({
                     deleteBucketOnRemove: false,
                     region: process.env.AWS_REGION,
                     name: process.env.S3_BUCKET,
-                    storage: {
-                        accelerated: false
-                    },
+                    accelerated: false,
                     cors: {
                         CORSRules: [
                             {
@@ -249,6 +270,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     description: "Files GraphQL API",
                     code: "./files/graphql/build",
@@ -272,6 +294,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     description: "I18N GraphQL API",
                     code: "./i18n/graphql/build",
@@ -290,6 +313,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     code: "./i18n/locales/build",
                     handler: "handler.handler",
@@ -326,6 +350,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     description: "Page Builder GraphQL API",
                     code: "./pageBuilder/build",
@@ -349,6 +374,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     description: "Form Builder GraphQL API",
                     code: "./formBuilder/build",
@@ -371,6 +397,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     region: process.env.AWS_REGION,
                     description: "CMS Admin GraphQL API",
                     code: "./cms/graphql/build",
@@ -392,6 +419,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     description: "CMS Content API",
                     region: process.env.AWS_REGION,
                     code: "./cms/content/build",
@@ -415,6 +443,7 @@ module.exports = () => ({
             deploy: {
                 component: "@webiny/serverless-function",
                 inputs: {
+                    role: "${lambdaRole.arn}",
                     description: "CMS Data Manager",
                     region: process.env.AWS_REGION,
                     code: "./cms/dataManager/build",
diff --git a/package.json b/package.json
index 5c56737..e7aa19c 100644
--- a/package.json
+++ b/package.json
@@ -4,5 +4,6 @@
 	"private": true,
 	"dependencies": {
+		"@webiny/aws-layers": "^4.1.0",
 		"@webiny/cwp-template-full": "^4.0.2",
 		"@webiny/cli": "^4.0.2",
 		"@webiny/cli-plugin-deploy-components": "^4.0.2",
diff --git a/tsconfig.build.json b/tsconfig.build.json
index e44db68de..d5c154aac 100644
--- a/tsconfig.build.json
+++ b/tsconfig.build.json
@@ -15,7 +15,7 @@
     "emitDeclarationOnly": true,
     "baseUrl": ".",
     "paths": {},
-    "typeRoots": ["node_modules/@types"]
+    "typeRoots": ["node_modules/@types", "./types"]
   },
   "exclude": [
     "node_modules",
diff --git a/types/apps/index.d.ts b/types/apps/index.d.ts
new file mode 100644
index 000000000..33b867c95
--- /dev/null
+++ b/types/apps/index.d.ts
@@ -0,0 +1,29 @@
+// @ts-nocheck
+/**
+ * Use this file to add type declarations shared by your React apps and packages.
+ */
+declare module "*.md" {
+    const md: string;
+    export default md;
+}
+
+declare module "*.png" {
+    const png: string;
+    export default png;
+}
+
+declare module "*.jpg" {
+    const jpg: string;
+    export default jpg;
+}
+
+declare module "*.svg" {
+    import { FunctionComponent, SVGProps } from "react";
+
+    export const ReactComponent: FunctionComponent<SVGProps<SVGSVGElement> & {
+        alt?: string;
+    }>;
+
+    const src: string;
+    export default src;
+}
\ No newline at end of file
