name: Release (latest)

on:
  repository_dispatch:
    types: [release-latest]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NODE_OPTIONS: --max_old_space_size=4096
  MONGODB_SERVER: ${{ secrets.MONGODB_SERVER }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  WEBINY_TRACKING_PREFIX: ${{ secrets.WEBINY_TRACKING_PREFIX }}

jobs:
  build-test-release:
    name: Build, test and release ("latest" tag)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
          fetch-depth: 0

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "12"

      - name: Create ".npmrc" file in the project root
        run: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Check dependencies
        run: yarn adio

      - name: Build packages
        run: yarn build

      - name: Run tests
        run: yarn test

      - name: Set git email
        run: git config --global user.email "info@webiny.com"

      - name: Set git username
        run: git config --global user.name "webiny"

      - name: Create a release on GitHub
        run: yarn lerna version --force-publish --conventional-graduate --yes

      - name: Release packages to NPM
        run: yarn lerna publish from-package --yes

  build-e2e-test:
    name: Build and E2E test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
          fetch-depth: 0

      - uses: actions/setup-node@v2-beta
        with:
          node-version: 12

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Setup config files
        run: yarn setup-ci-cypress

      - name: Build packages
        run: yarn build

      - uses: webiny/action-post-run@1.0.0
        id: destroy-mongodb-database
        with:
          command: yarn setup-ci-cypress --post-run

      - uses: webiny/action-post-run@1.0.0
        id: webiny-remove-apps
        with:
          command: yarn webiny remove apps --env prod

      - uses: webiny/action-post-run@1.0.0
        id: webiny-remove-api
        with:
          command: yarn webiny remove api --env prod

      - name: Deploy API stack
        run: yarn webiny deploy api --env prod

      - name: Deploy Apps stack
        run: yarn webiny deploy apps --env prod

      - name: Setup Cypress config
        run: yarn setup-cypress

      - name: Wait for the website to be deployed
        run: node scripts/waitToDeploy

      - name: Cypress - run Admin app installation test
        run: yarn cypress run --spec "cypress/integration/adminInstallation/**/*.spec.js"

      - name: Cypress - run the rest of Admin app tests
        run: yarn cypress run --spec "cypress/integration/admin/**/*.spec.js"
